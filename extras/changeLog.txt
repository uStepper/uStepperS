Changelog - uStepper S library
----------------------------
Version 2.3.2:
- added new python control example
- fixed encoder stall examples
- removed debug setup of pin on portB as output

Version 2.3.1:
	- added 6 new examples

Version 2.3.0:
	- Changed Servo library (uStepperServo.cpp) to use timer PWM instead of polling to control servo motors. 
	- Changed the servo library example to use the new servo implementation.
	- Changed the 'stop' method at the uStepperS.cpp to wait until the motor realy stops movement. Thanks to Daniel-Walther for pointing it out.

Version 2.2.1:
	- Added timeout to homing function

Version 2.2.0:
	- Added function to get current driver speed in RPM (getDriverRPM())
	- Fixed "getVelocity()" method of "uStepperDriver" class to use correct twos complement conversion
	- Updated keywords
	- Added two new examples:
		- GYROBalance: Example on how to use MPU6050 IMU with uStepper S 
		- SWiFiGUI: Example sketch to control the uStepper S with browser based GUI over WiFi

Version 2.1.0:
	- Fixed checkOrientation to work with Closed loop and dropin modes
	- Fixed stallguard feature
	- Modified examples to library update

Version 2.1.0:
	- Fixed checkOrientation to work with Closed loop and dropin modes
	- Fixed stallguard feature
	- Modified examples to library update  
	
Version 2.0.0:
	- Changed name of "brake()" function in uStepper Class to "setBrakeMode()"
	- Implemented "setBrakeMode()" function in uStepper Class to choose between freewheel, braking with low side fets shorted and brake with specified hold current. default = brake with low side fets shorted
	- "setHome" argument of ustepper class "setup" function is now used
	- Implemented "checkOrientation()" function in uStepper Class, to check the orientation of the motor cable, and invert direction if needed.
	- Added 3 moves in "checkOrientation()" function in uStepper Class, to check orientation instead of just 1
	- Removed check for motor cable orientation from "setup()" function in uStepper Class. Users actively needs to call the "checkOrientation" function from uStepper Class, if they need this feature, AFTER calling the "setup()" function
	- Disabled driver on MCU reset while setting up, to avoid the motor spinning on startup if power was removed during motor movement
	- Moved the absolute position counter into the encoder getangle function
	- Added a LP filter on the absolute position data in the encoder function (so, getAngleMoved is filtered)
	- Stall detection removed from timer1
	- Variable filter depending on mode set in setup routine
	- Removed obsolete things in setup routine and timer1
	- Made new velocity measurement for encoder values
	- Made the control threshold for closed loop control variable and intrduced a function for editing it
	- Changed timer1 interrupt frequency to 2KhZ for all other modes than DROPIN
	- Added option to choose how long the "checkOrientation()" function in UstepperS class should move during check
	- Renamed "PID" to "CLOSEDLOOP" to avoid confusing the closed loop position mode with a PID controller. PID keyword is stall accepted for backwards compatibility

Version 1.0.1:
	- Fixed bug in functions to set acceleration and deceleration
	- moved a couple of functions in uStepperDriver.h from public to protected section of class
	- added documentation
	
Version 1.0.0:
	- Bug fixes
	- New Dropin PID code
	- Added dropin CLI interface
	- Fixed stall detection, and added user sensitivity parameter

Version 0.1.1:
	- Bug fixes

Version 0.1.0:	
	- Initial release